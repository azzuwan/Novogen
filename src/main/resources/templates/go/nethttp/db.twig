package main

import (
	"log"
        "time"
	"upper.io/db.v2"
	"upper.io/db.v2/{{project.database.type}}"
)

var settings = {{project.database.type}}.ConnectionURL{
	Database: `{{project.database.schema}}`,
	Host:     `{{project.database.host}}`,
	User:     `{{project.database.user}}`,
	Password: `{{project.database.password}}`,
}


{% for table in tables %}
type {{table.name|capitalize}} struct {
        {% for column in table.columns %}
        {{column.name|capitalize}}     {{column.type|dataType}}     `db:"{{column.name}}"`
        {% endfor%} {{System.lineSeparator()}}

}

{% endfor %}


func main() {
	sess, err := {{project.database.type}}.Open(settings)
	if err != nil {
		log.Fatal(err)
	}
	defer sess.Close()

	// Set this to true to enable the query logger which will print all SQL
	// statements to stdout.
	db.Conf.SetLogging(false)

	// Define a result set without passing a condition to Find(), this means we
	// want to match all the elements on the books table.
	res := sess.Collection("employees").Find()

	// We can use this res object later in different queries, here we'll use it
	// to fetch all the books on our catalog in descending order.
	var employees []Employees
	if err := res.OrderBy("first_name DESC").All(&employees); err != nil {
		log.Fatal(err)
	}

	// The books slice has been populated!
	log.Println("Employees:")
	for _, emp := range employees {
		log.Printf("%q (ID: %d)\n", emp.First_name, emp.Emp_no)
	}
}
